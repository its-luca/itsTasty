// Package botAPI provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.12.4 DO NOT EDIT.
package botAPI

import (
	openapi_types "github.com/deepmap/oapi-codegen/pkg/types"
)

const (
	ApiKeyAuthScopes = "ApiKeyAuth.Scopes"
)

// BasicError defines model for BasicError.
type BasicError struct {
	What *string `json:"what,omitempty"`
}

// CreateOrUpdateDishReq Transmit data for dish creation
type CreateOrUpdateDishReq struct {
	// DishName Name of the dish to be created / updated
	DishName string `json:"dishName"`

	// ServedAt Location where this dish is served
	ServedAt string `json:"servedAt"`
}

// CreateOrUpdateDishResp Inform if dish was created or just updated and return its ID
type CreateOrUpdateDishResp struct {
	// CheckMergeCandidates Can only be true for new dishes. If true, this dish should probably be merged with existing dishes. You should display the user a link to the web page, which can then fetch the merge candidates via the user API.
	CheckMergeCandidates bool `json:"checkMergeCandidates"`

	// CreatedNewDish True if a new dish was created
	CreatedNewDish bool `json:"createdNewDish"`

	// CreatedNewLocation True if a new location was created
	CreatedNewLocation bool `json:"createdNewLocation"`

	// DishID ID of the created/updated dish. Just there to make subsequent calls easier
	DishID int64 `json:"dishID"`
}

// CurrentVotingStreakResp Longest currently ongoing voting streaks
type CurrentVotingStreakResp struct {
	// CurrentTeamVotingStreak Length of current team voting streak in days
	CurrentTeamVotingStreak *int `json:"currentTeamVotingStreak,omitempty"`

	// CurrentUserVotingStreakLength Length of the longest, currently ongoing voting streak by an individual user
	CurrentUserVotingStreakLength *int `json:"currentUserVotingStreakLength,omitempty"`

	// UsersWithMaxStreak All users who have a currently ongoing voting streak of length currentUserVotingStreakLength
	UsersWithMaxStreak *[]string `json:"usersWithMaxStreak,omitempty"`
}

// GetDishResp Detailed description of a dish
type GetDishResp struct {
	// AvgRating Average rating for this dish. Omitted if there are no votes yet
	AvgRating *float32 `json:"avgRating,omitempty"`

	// Name Name of the dish
	Name string `json:"name"`

	// OccurrenceCount Amount of times this dish occurred
	OccurrenceCount int `json:"occurrenceCount"`

	// Ratings Ratings for this dish. Keys mean "stars" and values mean ratings with that amount of stars. If more than zero votes are present avgRating field contains the average rating.
	Ratings map[string]int `json:"ratings"`

	// RecentOccurrences Most recent occurrences of the dish. Might not contain the whole history
	RecentOccurrences []openapi_types.Date `json:"recentOccurrences"`

	// ServedAt Location where this dish is served
	ServedAt string `json:"servedAt"`
}

// PostCreateOrUpdateDishJSONRequestBody defines body for PostCreateOrUpdateDish for application/json ContentType.
type PostCreateOrUpdateDishJSONRequestBody = CreateOrUpdateDishReq
